{"version":3,"file":"fresh.cjs.development.js","sources":["../src/state/State.tsx","../src/style.tsx","../src/form/CancelButton.tsx","../src/form/Tooltip.tsx","../src/hooks/useSpecialField.ts","../src/fields/Select.tsx","../src/fields/Reference.tsx","../src/fields/Password.tsx","../src/fields/Tags.tsx","../src/fields/TextArea.tsx","../src/fields/Number.tsx","../src/fields/Markdown.tsx","../src/fields/Text.tsx","../src/fields/Toggle.tsx","../src/Field.tsx","../src/index.tsx"],"sourcesContent":["import React, { useReducer, createContext, ReactNode } from 'react'\n\nexport interface ContextArguments {\n  id: string\n  value: string | boolean | number | object\n}\n\nexport interface FieldStateInterface {\n  formState: object\n  update(fieldData: ContextArguments): void\n  registerField(fieldData: ContextArguments): void\n  resetForm(): void\n}\n\nexport const FormContext = createContext<FieldStateInterface | null>(null)\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'update':\n      const data = {}\n      data[action.id] = action.value\n      return { ...state, ...data }\n\n    case 'registerField':\n      const temp = {\n        ...state,\n      }\n\n      // Adds blank value if default doesn't exist\n      if (!temp[action.id]) {\n        temp[action.id] = action.value\n      }\n\n      // Add field based default values if one doesn't exist\n      if (!temp.defaultValues[action.id]) {\n        temp.defaultValues[action.id] = action.value || ''\n      }\n\n      return temp\n\n    case 'resetForm':\n      const { defaultValues } = state\n      return {\n        defaultValues,\n        ...state.defaultValues,\n      }\n\n    default:\n      throw new Error()\n  }\n}\n\nexport function FormProvider({\n  children,\n  defaultValues,\n}: {\n  children: ReactNode\n  defaultValues: object\n}) {\n  const [formState, dispatch] = useReducer(reducer, {\n    defaultValues,\n    ...defaultValues,\n  })\n\n  const ContextProvider: FieldStateInterface = {\n    formState,\n    update: ({ id, value }) => dispatch({ type: 'update', id, value }),\n    registerField: ({ id, value }) =>\n      dispatch({ type: 'registerField', id, value }),\n    resetForm: () => dispatch({ type: 'resetForm' }),\n  }\n\n  return (\n    <FormContext.Provider value={ContextProvider}>\n      {children}\n    </FormContext.Provider>\n  )\n}\n","import { createGlobalStyle } from 'styled-components'\n\nconst Global = createGlobalStyle`\n  :root {\n    --fresh-tooltip-color: #000;\n    --fresh-tooltip-background: #eee;\n  }\n\n  .fresh-switch {\n    position: relative;\n    display: inline-block;\n    width: 60px;\n    height: 34px;\n    margin: 0.5em 0px;\n  }\n\n  .fresh-switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n\n  .fresh-slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #ccc;\n    transition: 0.4s;\n    border-radius: 34px;\n  }\n\n  .fresh-slider:before {\n    position: absolute;\n    content: '';\n    height: 26px;\n    width: 26px;\n    left: 4px;\n    bottom: 4px;\n    background-color: white;\n    transition: 0.4s;\n    border-radius: 50%;\n  }\n\n  input:checked + .fresh-slider {\n    background-color: #2196f3;\n  }\n\n  input:focus + .fresh-slider {\n    box-shadow: 0 0 1px #2196f3;\n  }\n\n  input:checked + .fresh-slider:before {\n    transform: translateX(26px);\n  }\n\n  input,\n  select,\n  textarea,\n  .fresh-input {\n    background-color: transparent;\n    box-sizing: border-box;\n    box-shadow: none;\n    max-width: 100%;\n    border-width: 1px;\n    border-style: solid;\n    border-image: initial;\n    border-color: inherit;\n    border-radius: 3px;\n    font: inherit;\n    margin: 0.5em 0px;\n    padding: 0.75em;\n    transition: border-color 0.2s ease 0s;\n  }\n\n  textarea,\n  .fresh-input-textarea,\n  .fresh-input-markdown {\n    min-height: 6rem;\n  }\n\n  .fresh-markdown-wrapper {\n    .fresh-input-markdown {\n      border-color: #eee; \n    }\n    .fresh-input-textarea,\n    .fresh-input-markdown {\n      width: 100%;\n    }\n    @media (min-width: 800px) {\n      display: flex;\n      .fresh-input-textarea {\n        width: 50%;  \n      }\n      \n      .fresh-input-markdown {\n        width: calc(50% - 0.5em);  \n        margin-left: 0.5em;\n      }\n    }\n  }\n  \n  /* Label and Tooltip */\n  .fresh-focused {\n    border: 1px solid #eee;\n    max-height: 200px;\n    overflow-y: scroll;\n    position: absolute;\n    background: white;\n    width: 100%;\n    margin-top: -0.5em;\n    border-top: 0;\n  }\n\n  .fresh-label {\n    position: relative;\n  }\n\n  .fresh-title {\n    display: flex; \n    align-items: center;\n    .fresh-tooltip {\n      position: relative;\n      color: var(--fresh-tooltip-color);\n      &:after {\n        position: absolute;\n        left: 150%;\n        min-width: 100px;\n        content: attr(data-tooltip);\n        opacity: 0;\n        transition: all .3s ease-in-out .35s;\n        visibility: hidden;\n        z-index: 2;\n        position: absolute;\n        background-color: var(--fresh-tooltip-background);\n        padding: 0.75em;\n        border-radius: 3px;\n        font-size: 0.8em;\n      }\n      &:hover:after {\n        opacity: 1;\n        left: 130%;\n        visibility: visible;\n      }\n      .fresh-tooltip-icon {\n        position: relative;\n        height: 0.8em;\n        width: 0.8em;\n        min-height: 0.8em;\n        min-width: 0.8em;\n      }\n    }\n  }\n\n  /* Reference Field */\n  .fresh-focused {\n    border: 1px solid #eee;\n    max-height: 200px;\n    overflow-y: scroll;\n    position: absolute;\n    background: white;\n    width: 100%;\n    margin-top: -0.5em;\n    border-top: 0;\n  }\n\n  /* Tag Field */\n  .fresh-input-tags {\n    margin-top: 1rem;\n  }\n\n  .react-tagsinput-tag {\n    background: #eee;\n    padding: 6px 10px;\n    margin: 0 6px 0 0;\n  }\n\n  .react-tagsinput-input {\n    margin-top: 1rem;\n    display: block;\n  }\n\n  /* Toggle Field */\n  .fresh-switch {\n    position: relative;\n    display: inline-block;\n    width: 60px;\n    height: 34px;\n    margin: 0.5em 0px;\n    .fresh-input-toggle {\n      opacity: 0;\n      width: 0;\n      height: 0;\n    }\n    .fresh-slider {\n      position: absolute;\n      cursor: pointer;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background-color: var(--fresh-toggle-color);\n      transition: 0.4s;\n      border-width: 1px;\n      border-style: solid;\n      border-image: initial;\n      border-color: inherit;\n      border-radius: 34px;\n      &.on {\n        background-color: var(--fresh-toggle-on-color);\n        &:focus {\n          box-shadow: 0 0 1px var(--fresh-toggle-on-color);\n        }\n        &:before {\n          transform: translateX(26px);\n        }\n      }\n      &:before {\n        position: absolute;\n        content: '';\n        height: 26px;\n        width: 26px;\n        left: 2px;\n        bottom: 2px;\n        background-color: white;\n        transition: 0.4s;\n        border-width: 1px;\n        border-style: solid;\n        border-image: initial;\n        border-color: inherit;\n        border-radius: 50%;\n      }\n    }\n  }\n`\n\nexport default Global\n","import React, { useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport { FormContext } from '../state/State'\n\nconst CancelButton = ({ cancelAction, cancelText }) => {\n  const { resetForm } = useContext(FormContext)\n\n  return (\n    <button\n      id=\"fresh-cancel\"\n      className=\"fresh-button fresh-cancel\"\n      onClick={() => {\n        cancelAction()\n        resetForm()\n      }}\n      type=\"reset\"\n    >\n      {cancelText}\n    </button>\n  )\n}\n\nCancelButton.propTypes = {\n  cancelAction: PropTypes.func.isRequired,\n  cancelText: PropTypes.string,\n}\n\nCancelButton.defaultProps = {\n  cancelText: 'Cancel',\n}\nexport default CancelButton\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\ninterface TooltipInterface {\n  tooltip: string\n  tooltipBackground: string\n  tooltipColor: string\n  tooltipIconColor: string\n}\n\nconst Tooltip = ({\n  tooltip,\n  tooltipBackground,\n  tooltipColor,\n  tooltipIconColor,\n}: TooltipInterface) => {\n  const tooltipStyle = {\n    '--fresh-tooltip-background': tooltipBackground,\n    '--fresh-tooltip-color': tooltipColor,\n    '--fresh-tooltip-icon-color': tooltipIconColor,\n  } as React.CSSProperties\n  return (\n    <span className=\"fresh-tooltip\" data-tooltip={tooltip} style={tooltipStyle}>\n      <svg\n        className=\"fresh-tooltip-icon\"\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 16 16\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16ZM9.02539 5.91797H5.84668V7.79102H6.91309V11.127H5.84668V13H10.0098V11.127H9.02539V5.91797ZM6.89258 3.16309C6.83333 3.30892 6.80371 3.46615 6.80371 3.63477C6.80371 3.80339 6.83333 3.96289 6.89258 4.11328C6.95638 4.25911 7.04297 4.38672 7.15234 4.49609C7.26172 4.60547 7.38932 4.69206 7.53516 4.75586C7.68555 4.81966 7.84733 4.85156 8.02051 4.85156C8.18457 4.85156 8.33952 4.81966 8.48535 4.75586C8.63118 4.69206 8.75879 4.60547 8.86816 4.49609C8.97754 4.38672 9.06413 4.25911 9.12793 4.11328C9.19173 3.96289 9.22363 3.80339 9.22363 3.63477C9.22363 3.46615 9.19173 3.30892 9.12793 3.16309C9.06413 3.0127 8.97754 2.88281 8.86816 2.77344C8.75879 2.66406 8.63118 2.57747 8.48535 2.51367C8.33952 2.44987 8.18457 2.41797 8.02051 2.41797C7.84733 2.41797 7.68555 2.44987 7.53516 2.51367C7.38932 2.57747 7.26172 2.66406 7.15234 2.77344C7.04297 2.88281 6.95638 3.0127 6.89258 3.16309Z\"\n          fill={tooltipIconColor}\n        />\n      </svg>\n    </span>\n  )\n}\n\nTooltip.propTypes = {\n  tooltip: PropTypes.string,\n  tooltipBackground: PropTypes.string,\n  tooltipColor: PropTypes.string,\n  tooltipIconColor: PropTypes.string,\n}\n\nTooltip.defaultProps = {\n  tooltip: '',\n  tooltipBackground: '#eee',\n  tooltipColor: '#000',\n  tooltipIconColor: '#000',\n}\nexport default Tooltip\n","import { useContext, useEffect } from 'react'\nimport { FormContext, FieldStateInterface } from '../state/State'\n\ninterface useSFInterface {\n  fieldId: string\n  defaultValue: string | boolean | number | object\n}\n\nfunction useSpecialField({ fieldId, defaultValue }: useSFInterface) {\n  const { registerField, formState, update } = useContext<FieldStateInterface>(\n    FormContext\n  )\n\n  useEffect(() => {\n    registerField({\n      id: fieldId,\n      value: defaultValue,\n    })\n  }, [])\n\n  return { formState, update, fieldState: formState[fieldId] }\n}\n\nexport default useSpecialField\n","import React from 'react'\nimport useSpecialField from '../hooks/useSpecialField'\nimport { FieldInterface } from './types'\n\nconst Select = ({ options, fieldId, defaultValue = 0 }: FieldInterface) => {\n  const { fieldState, update } = useSpecialField({ fieldId, defaultValue })\n  return (\n    <select\n      id={`fresh-${fieldId}`}\n      className=\"fresh-input fresh-input-select\"\n      onChange={e => update({ id: fieldId, value: e.target.value })}\n      value={fieldState}\n    >\n      {options.map(option => (\n        <option value={option} key={option} className=\"fresh-option\">\n          {option}\n        </option>\n      ))}\n    </select>\n  )\n}\n\nexport default Select\n","import React, { useState } from 'react'\nimport useSpecialField from '../hooks/useSpecialField'\nimport { FieldInterface } from './types'\n\nconst Reference = ({\n  options,\n  fieldId,\n  displayProperty,\n  defaultValue = {},\n  placeholder = '',\n}: FieldInterface) => {\n  const { update } = useSpecialField({ fieldId, defaultValue })\n  const [inputValue, setInputValue] = useState('')\n  const [isFocused, setIsFocused] = useState(false)\n  return (\n    <>\n      <input\n        id={`fresh-${fieldId}`}\n        onChange={e => setInputValue(e.target.value)}\n        value={inputValue}\n        onFocus={() => setIsFocused(true)}\n        onBlur={() => setIsFocused(false)}\n        placeholder={placeholder}\n        type=\"text\"\n        className=\"fresh-input fresh-input-reference\"\n      />\n      {isFocused && (\n        <div className=\"fresh-focused\">\n          {options\n            .filter(option =>\n              option[displayProperty]\n                .toLowerCase()\n                .includes(inputValue.toLowerCase())\n            )\n            .map(option => (\n              <div\n                key={option.id}\n                style={{ padding: '0.75em' }}\n                onMouseDown={() => {\n                  update({ id: fieldId, value: option })\n                  setInputValue(option[displayProperty])\n                }}\n              >\n                {option[displayProperty]}\n              </div>\n            ))}\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default Reference\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport useSpecialField from '../hooks/useSpecialField'\nimport { FieldInterface } from './types'\n\nconst Password = ({\n  className,\n  defaultValue = '',\n  fieldId,\n  placeholder,\n  required,\n  strength = true,\n  type,\n}: FieldInterface) => {\n  const { fieldState, update } = useSpecialField({ fieldId, defaultValue })\n  const strengthValue = calculateScore(fieldState || '')\n  let strengthMeter = {\n    background: '#ccc',\n    width: 'calc(193px * 0.25)',\n  }\n  if (strengthValue === 2) {\n    strengthMeter = {\n      width: 'calc(193px * 0.5)',\n      background: 'red',\n    }\n  } else if (strengthValue === 3) {\n    strengthMeter = {\n      width: 'calc(193px * 0.75)',\n      background: 'red',\n    }\n  } else if (strengthValue === 4) {\n    strengthMeter = {\n      width: 'calc(193px * 1)',\n      background: 'green',\n    }\n  }\n  return (\n    <>\n      <input\n        className={`fresh-input fresh-input-password ${className}`}\n        placeholder={placeholder}\n        type={type}\n        required={required}\n        value={fieldState || ''}\n        id={`fresh-${fieldId}`}\n        onChange={e => update({ value: e.target.value, id: fieldId })}\n      />\n      {strength && (\n        <div\n          style={{\n            height: '4px',\n            marginBottom: '1rem',\n            transition: '0.3s ease all',\n            ...strengthMeter,\n          }}\n        />\n      )}\n    </>\n  )\n}\n\nPassword.propTypes = {\n  strength: PropTypes.bool,\n  placeholder: PropTypes.string,\n}\n\nPassword.defaultProps = {\n  placeholder: '',\n}\n\nexport default Password\n\nconst options = {\n  showText: true,\n  fieldPartialMatch: true,\n  minimumLength: 4,\n}\n\nfunction calculateScore(password: string) {\n  var score = 0\n\n  // password < options.minimumLength\n  if (password.length < options.minimumLength) {\n    return -1\n  }\n  // password length\n  score += password.length * 4\n\n  // password has 3 numbers\n  if (password.match(/(.*[0-9].*[0-9].*[0-9])/)) {\n    score += 5\n  }\n\n  // password has at least 2 sybols\n  var symbols: any = '.*[!,@,#,$,%,^,&,*,?,_,~]'\n  symbols = new RegExp('(' + symbols + symbols + ')')\n  if (password.match(symbols)) {\n    score += 5\n  }\n\n  // password has Upper and Lower chars\n  if (password.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/)) {\n    score += 10\n  }\n\n  // password has number and chars\n  if (password.match(/([a-zA-Z])/) && password.match(/([0-9])/)) {\n    score += 15\n  }\n\n  // password has number and symbol\n  if (\n    password.match(/([!,@,#,$,%,^,&,*,?,_,~])/) &&\n    password.match(/([0-9])/)\n  ) {\n    score += 15\n  }\n\n  // password has char and symbol\n  if (\n    password.match(/([!,@,#,$,%,^,&,*,?,_,~])/) &&\n    password.match(/([a-zA-Z])/)\n  ) {\n    score += 15\n  }\n\n  // password is just numbers or chars\n  if (password.match(/^\\w+$/) || password.match(/^\\d+$/)) {\n    score -= 10\n  }\n\n  if (score > 100) {\n    score = 100\n  }\n\n  if (score < 0) {\n    score = 0\n  }\n\n  return score * 0.04\n}\n","import React from 'react'\nimport useSpecialField from '../hooks/useSpecialField'\nimport TagsInput from 'react-tagsinput'\nimport { FieldInterface } from './types'\n\nconst Tags = ({ defaultValue = [], fieldId }: FieldInterface) => {\n  const { update, fieldState } = useSpecialField({ fieldId, defaultValue })\n\n  return (\n    <TagsInput\n      value={fieldState || []}\n      onChange={value => update({ id: fieldId, value })}\n      className=\"fresh-input-tags\"\n      id={`fresh-${fieldId}`}\n      style={{\n        marginTop: '1rem',\n      }}\n    />\n  )\n}\n\nexport default Tags\n","import React from 'react'\nimport useSpecialField from '../hooks/useSpecialField'\n\ninterface RefValue {\n  id: string\n  text: string\n}\n\ntype Props = {\n  required?: boolean\n  children: string\n  type?: string\n  fieldId?: string\n  name?: string\n  label?: boolean\n  error?: string\n  placeholder?: string\n  options: any\n  className?: string\n  defaultValue?: string | boolean | number | [] | RefValue | {}\n  tooltip?: string\n  strength?: boolean\n  tooltipBackground?: string\n  tooltipColor?: string\n  tooltipIconColor?: string\n  displayProperty?: string\n}\n\nexport const TextArea: React.FC<Props> = ({\n  defaultValue = '',\n  fieldId,\n  placeholder,\n}) => {\n  const { fieldState, update } = useSpecialField({ fieldId, defaultValue })\n  return (\n    <textarea\n      id={`fresh-${fieldId}`}\n      placeholder={placeholder}\n      value={fieldState || ''}\n      className=\"fresh-input fresh-input-textarea\"\n      onChange={e => update({ id: fieldId, value: e.target.value })}\n    />\n  )\n}\n\nexport default TextArea\n","import React from 'react'\nimport useSpecialField from '../hooks/useSpecialField'\nimport { FieldInterface } from './types'\n\nconst NumberField = ({\n  fieldId,\n  defaultValue = null,\n  placeholder,\n  required,\n  className,\n}: FieldInterface) => {\n  const { fieldState, update } = useSpecialField({\n    fieldId,\n    defaultValue,\n  })\n  return (\n    <>\n      <input\n        required={required}\n        className={`fresh-input fresh-input-number ${className}`}\n        placeholder={placeholder}\n        id={`fresh-${fieldId}`}\n        type=\"number\"\n        value={fieldState || ''}\n        onChange={e => {\n          const value = e.target.value ? parseInt(e.target.value) : null\n          update({ id: fieldId, value })\n        }}\n      />\n    </>\n  )\n}\n\nexport default NumberField\n","import React from 'react'\nimport Markdown from 'markdown-to-jsx'\nimport useSpecialField from '../hooks/useSpecialField'\nimport { FieldInterface } from './types'\n\nexport const TextArea = ({\n  defaultValue = '',\n  fieldId,\n  placeholder,\n}: FieldInterface) => {\n  const { fieldState, update } = useSpecialField({ fieldId, defaultValue })\n  return (\n    <div className=\"fresh-markdown-wrapper\">\n      <textarea\n        id={`fresh-${fieldId}`}\n        placeholder={placeholder}\n        value={fieldState || ''}\n        className=\"fresh-input fresh-input-textarea\"\n        onChange={e => update({ id: fieldId, value: e.target.value })}\n      />\n      <div className=\"fresh-input fresh-input-markdown\">\n        <Markdown children={fieldState || ''} />\n      </div>\n    </div>\n  )\n}\n\nexport default TextArea\n","import React from 'react'\nimport useSpecialField from '../hooks/useSpecialField'\nimport { FieldInterface } from './types'\n\nconst Text = ({\n  className,\n  defaultValue,\n  fieldId,\n  placeholder,\n  required,\n  type,\n}: FieldInterface) => {\n  const { fieldState, update } = useSpecialField({\n    fieldId,\n    defaultValue,\n  })\n  return (\n    <input\n      required={required}\n      className={`fresh-input fresh-input-${type} ${className}`}\n      placeholder={placeholder}\n      id={`fresh-${fieldId}`}\n      type={type}\n      value={fieldState || ''}\n      onChange={e => {\n        update({ id: fieldId, value: e.target.value })\n      }}\n    />\n  )\n}\n\nexport default Text\n","import React from 'react'\nimport { FieldInterface } from './types'\nimport useSpecialField from '../hooks/useSpecialField'\n\nconst Toggle = ({\n  fieldId,\n  defaultValue = false,\n  className = '',\n}: FieldInterface) => {\n  const { fieldState, update } = useSpecialField({ fieldId, defaultValue })\n  return (\n    <div className={`${className} fresh-switch`}>\n      <input\n        checked={fieldState || ''}\n        type=\"checkbox\"\n        id={`fresh-${fieldId}`}\n        className=\"fresh-input-toggle\"\n        onChange={() => {}}\n      />\n      <span\n        className={`fresh-slider`}\n        onClick={() => update({ id: fieldId, value: !fieldState })}\n      />\n    </div>\n  )\n}\n\nexport default Toggle\n","import React from 'react'\nimport { FieldInterface } from './fields/types'\nimport Tooltip from './form/Tooltip'\nimport Select from './fields/Select'\nimport Reference from './fields/Reference'\nimport Password from './fields/Password'\nimport Tags from './fields/Tags'\nimport TextArea from './fields/TextArea'\nimport NumberField from './fields/Number'\nimport Markdown from './fields/Markdown'\nimport Text from './fields/Text'\nimport Toggle from './fields/Toggle'\n\nconst kebabCase = str =>\n  str\n    .replace(/([a-z])([A-Z])/g, '$1-$2')\n    .replace(/[\\s_]+/g, '-')\n    .toLowerCase()\n\nconst camelCase = str => {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function(match, index) {\n    if (+match === 0) return ''\n    return index == 0 ? match.toLowerCase() : match.toUpperCase()\n  })\n}\n\nconst Field = ({\n  required = false,\n  children,\n  name = '',\n  type = 'text',\n  label = true,\n  error,\n  placeholder = '',\n  options,\n  strength,\n  className = '',\n  defaultValue = '',\n  displayProperty = '',\n  tooltip,\n  tooltipBackground,\n  tooltipColor,\n  tooltipIconColor,\n}: FieldInterface) => {\n  const fieldId = name || camelCase(children)\n\n  const standardProps = {\n    children,\n    required,\n    name,\n    type,\n    label,\n    error,\n    placeholder,\n    options,\n    className,\n    defaultValue,\n    displayProperty,\n  }\n\n  return (\n    <div className={`fresh-field-wrapper ${fieldId}`}>\n      <label className=\"fresh-label\" htmlFor={`fresh-${fieldId}`}>\n        <span className=\"fresh-title\">\n          {required && '*'} {label && children}&nbsp;\n          {tooltip && (\n            <Tooltip\n              tooltip={tooltip}\n              tooltipBackground={tooltipBackground}\n              tooltipColor={tooltipColor}\n              tooltipIconColor={tooltipIconColor}\n            />\n          )}\n        </span>\n        {(() => {\n          switch (type) {\n            case 'select':\n              return <Select fieldId={fieldId} {...standardProps} />\n            case 'reference':\n              return <Reference fieldId={fieldId} {...standardProps} />\n            case 'password':\n              return (\n                <Password\n                  strength={strength}\n                  fieldId={fieldId}\n                  {...standardProps}\n                />\n              )\n            case 'tags':\n              return <Tags fieldId={fieldId} {...standardProps} />\n            case 'textarea':\n              return <TextArea fieldId={fieldId} {...standardProps} />\n            case 'number':\n              return <NumberField fieldId={fieldId} {...standardProps} />\n            case 'markdown':\n              return <Markdown fieldId={fieldId} {...standardProps} />\n            case 'toggle':\n              return <Toggle fieldId={fieldId} {...standardProps} />\n            default:\n              return <Text fieldId={fieldId} {...standardProps} />\n          }\n        })()}\n      </label>\n      {error && <div className=\"fresh-error\">{error}</div>}\n    </div>\n  )\n}\n\nField.defaultProps = {\n  defaultValue: null,\n  options: [],\n  tooltip: '',\n  tooltipBackground: '#eee',\n  tooltipColor: '#000',\n  tooltipIconColor: '#000',\n}\n\nexport default Field\n","import React, { useContext, ReactNode } from 'react'\nimport { FormProvider, FormContext, FieldStateInterface } from './state/State'\nimport Global from './style'\nimport CancelButton from './form/CancelButton'\nexport { default as Field } from './Field'\n\ninterface defaultValuesInterface {\n  defaultValues?: object\n}\n\ninterface FormProps {\n  defaultValues?: defaultValuesInterface\n}\n\nconst Form = ({ defaultValues = {}, ...rest }: FormProps) => {\n  return (\n    <FormProvider defaultValues={defaultValues}>\n      <Global />\n      <FormWrapper {...(rest as FormWrapperInterface)} />\n    </FormProvider>\n  )\n}\n\ninterface FormWrapperInterface {\n  cancelAction(): void\n  cancelButton?: boolean\n  cancelText?: string\n  children: ReactNode | ReactNode[]\n  className?: string\n  onSubmit(formState: object): void\n  submitText?: string\n}\n\nconst FormWrapper = ({\n  cancelAction = () => null,\n  cancelButton = true,\n  cancelText = 'Cancel',\n  children,\n  className = '',\n  onSubmit,\n  submitText = 'Submit',\n}: FormWrapperInterface) => {\n  const { formState }: FieldStateInterface = useContext(FormContext)\n\n  return (\n    <form\n      className={`${className} fresh-form`}\n      onSubmit={e => {\n        e.preventDefault()\n        const data: defaultValuesInterface = { ...formState }\n        delete data.defaultValues\n        onSubmit(data)\n      }}\n    >\n      {children}\n      <div>\n        <button\n          id=\"fresh-submit\"\n          className=\"fresh-button fresh-submit\"\n          type=\"submit\"\n        >\n          {submitText}\n        </button>\n        {cancelButton && (\n          <CancelButton cancelAction={cancelAction} cancelText={cancelText} />\n        )}\n      </div>\n    </form>\n  )\n}\n\n// TODO\n// AUto form prop that allows for automatic form building via graphql. Required fields and all\n\n// Future api idea <Form mutation={GRAPHQL_MUTATION} /> one liner\n\n// Reset on submit option\nexport { Form }\n"],"names":["FormContext","createContext","reducer","state","action","type","data","id","value","temp","defaultValues","Error","FormProvider","children","useReducer","formState","dispatch","ContextProvider","update","registerField","resetForm","React","Provider","Global","createGlobalStyle","CancelButton","cancelAction","cancelText","useContext","className","onClick","propTypes","PropTypes","func","isRequired","string","defaultProps","Tooltip","tooltip","tooltipBackground","tooltipColor","tooltipIconColor","tooltipStyle","style","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","useSpecialField","fieldId","defaultValue","useEffect","fieldState","Select","options","onChange","e","target","map","option","key","Reference","displayProperty","placeholder","useState","inputValue","setInputValue","isFocused","setIsFocused","onFocus","onBlur","filter","toLowerCase","includes","padding","onMouseDown","Password","required","strength","strengthValue","calculateScore","strengthMeter","background","marginBottom","transition","bool","showText","fieldPartialMatch","minimumLength","password","score","length","match","symbols","RegExp","Tags","TagsInput","marginTop","TextArea","NumberField","parseInt","Markdown","Text","Toggle","checked","camelCase","str","replace","index","toUpperCase","Field","name","label","error","standardProps","htmlFor","Form","rest","FormWrapper","cancelButton","onSubmit","submitText","preventDefault"],"mappings":"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"}